@using Microsoft.AspNetCore.Components.Forms
@using Blazored.FluentValidation

@typeparam TEntity where TEntity : class, new()

<EditForm EditContext="EditContext"
          OnSubmit="@OnSubmit" OnInvalidSubmit="@OnInvalidSubmit" OnValidSubmit="@OnValidSubmit"
          AdditionalAttributes="@(AdditionalAttributes as IReadOnlyDictionary<string, object>)">
    @if (EnableDataAnnotationsValidation)
    {
        <DataAnnotationsValidator/>
    }

    @if (EnableFluentValidation)
    {
        <FluentValidationValidator/>
    }

    @foreach (var field in Fields)
    {
        if (field.IsHidden)
        {
            <div style="display:none">
                @ChildContent(field)
            </div>
        }
        else
        {
            @ChildContent(field)
        }
    }

    @if (SubmitButtonTemplate is not null)
    {
        @SubmitButtonTemplate
    }
</EditForm>